---
# Manage Galaxy clone

- name: Check for Galaxy
  stat: path={{ galaxy_server_dir }}/lib/galaxy
  register: lib_galaxy

- name: Get current Galaxy changeset (hg)
  command: "{{ hg_executable | default('hg') }} parents --template '{node}' chdir={{ galaxy_server_dir }}"
  register: current_changeset_id
  changed_when: False
  when: lib_galaxy.stat.exists and galaxy_vcs == 'hg'

- name: Get current Galaxy commit id (git)
  command: "{{ git_executable | default('git') }} rev-parse HEAD chdir={{ galaxy_server_dir }}"
  register: current_changeset_id
  changed_when: False
  when: lib_galaxy.stat.exists and galaxy_vcs == 'git'

- name: Report current Galaxy changeset
  debug: msg="Current changeset of {{ galaxy_server_dir }} {{ current_changeset_id.stdout | default(-1) }} does not match playbook version {{ galaxy_changeset_id }}"  #"
  changed_when: True
  when: lib_galaxy.stat.exists and (current_changeset_id.stdout | default(-1) != galaxy_changeset_id)

- name: Update Galaxy to correct changeset (hg)
  hg: dest={{ galaxy_server_dir }} force={{ galaxy_force_checkout }} purge=no repo={{ galaxy_repo }} revision={{ galaxy_changeset_id }} executable={{ hg_executable | default(omit) }}
  when: galaxy_vcs == 'hg'
  notify:
    - restart galaxy
    - email administrator with changeset id

- name: Update Galaxy to correct changeset (git)
  git: dest={{ galaxy_server_dir }} force={{ galaxy_force_checkout }} repo={{ galaxy_git_repo }} version={{ galaxy_changeset_id }} executable={{ git_executable | default(omit) }}
  when: galaxy_vcs == 'git'
  notify:
    - restart galaxy
    - email administrator with changeset id

- include: virtualenv.yml

- name: Remove orphaned .pyc files and compile bytecode
  script: makepyc.py {{ galaxy_server_dir }}/lib
  environment:
    PATH: "{{ galaxy_venv_dir }}/bin"
